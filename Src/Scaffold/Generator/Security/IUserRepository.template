using System.Collections.Generic;
using @(Model.CoreNamespace).Common.Persistence;
using @(Model.CoreNamespace).Domain.Model;

namespace @(Model.CoreNamespace).Domain.Repositories
{
    public interface IUserRepository
    {
        IList<User> FindAll();
        void Add(User user);
        User Get(long id);
        void Delete(User user);
        long CountAll();
        Page<User> FindPage(int pageNumber, int pageSize, string sortColumn, SortOrder sortOrder);

        User FindByUserName(string userName);
        string FindUserNameByEmail(string email);
        Page<User> FindUsersByEmail(string emailToMatch, int pageIndex, int pageSize);
        Page<User> FindUsersByUserName(string userNameToMatch, int pageIndex, int pageSize);
        IList<User> FindUsersContainingUserNameAndHavingRole(string usernameToMatch, Role role);
    }
}
